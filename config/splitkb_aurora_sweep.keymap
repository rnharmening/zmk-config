/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "zmk-helpers/helper.h"

// Source desired key-position labels
#include "zmk-helpers/key-labels/34.h" // 34 for aurora sweep

#include "keys_de.h"

#define DEFAULT   0
#define SYMBOL    1
#define NAVIGA    2
#define FUNCTN    3
#define EXTRAS    4
#define GAME      5
#define GAME2     6
#define BLUETOOTH 7

#define SHORT_IDLE 125
#define MEDIUM_IDLE 200
#define LONG_IDLE 325

&lt {
   tapping-term-ms = <180>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS DE_UNDER DE_MINUS DEL BKSP>;
};

ZMK_BEHAVIOR(sel_from, macro,
    wait-ms = <10>;
    tap-ms = <16>;
    bindings = < &kp S &kp DE_E &kp DE_L &kp DE_E &kp DE_C &kp DE_T &kp SPACE  &kp DE_STAR &kp SPACE  &kp DE_F &kp DE_R &kp DE_O &kp DE_M &kp SPACE>;
)

ZMK_BEHAVIOR(befundung, macro,
    wait-ms = <10>;
    tap-ms = <16>;
    bindings = < &kp DE_B &kp DE_E &kp DE_F &kp DE_U &kp DE_N &kp DE_D &kp DE_U &kp DE_N &kp DE_G >;
)

/ {

    behaviors {

        kpt: kp_tap_time {
            compatible = "zmk,behavior-macro-one-param";
            label = "KPT";
            tap-ms = <20>;  // tweak as needed
            #binding-cells = <1>;
            bindings = <&macro_param_1to1>, <&kp MACRO_PLACEHOLDER>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;    // <---[[moderate duration = 200]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <SHORT_IDLE>;
            bindings = <&kp>, <&kpt>;
        };

        shm: slow_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <255>;    // <---[[moderate duration = 200]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kpt>;
        };
        
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;    // <---[[moderate duration = 200]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <LONG_IDLE>;
            bindings = <&kp>, <&kpt>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_enter {
            timeout-ms = <30>;
            key-positions = <LH0 RH0>;
            layers = <DEFAULT>;
            bindings = <&kpt ENTER>;
        };

        combo_backspace {
            timeout-ms = <30>;
            key-positions = <RT2 RT3>;
            slow-release;
            layers = <DEFAULT>;
            bindings = <&kp BKSP>;
        };

        combo_delete {
            timeout-ms = <30>;
            key-positions = <RB2 RB3>;
            slow-release;
            require-prior-idle-ms = <SHORT_IDLE>;
            layers = <DEFAULT>;
            bindings = <&kp DEL>;
        };

        combo_tab {
            timeout-ms = <30>;
            key-positions = <LM1 LM2>;
            layers = <DEFAULT>;
            bindings = <&kp TAB>;
        };

        combo_esc {
            timeout-ms = <30>;
            key-positions = <RM1 RM2>;
            layers = <DEFAULT>;
            bindings = <&kpt ESC>;
        };

        combo_at {
            timeout-ms = <30>;
            key-positions = <LT2 LT3>;
            require-prior-idle-ms = <SHORT_IDLE>;
            layers = <DEFAULT>;
            bindings = <&kpt DE_AT>;
        };

        combo_caps {
            timeout-ms = <30>;
            key-positions = <LM0 RM0>;
            require-prior-idle-ms = <SHORT_IDLE>;
            layers = <DEFAULT>;
            bindings = <&kpt CAPS>;
        };

        combo_caps_word {
            timeout-ms = <30>;
            key-positions = <LM1 RM1>;
            layers = <DEFAULT>;
            bindings = <&caps_word>;
        };

        // Layer Toggle combos
        combo_default {
            timeout-ms = <30>;
            key-positions = <RM1 RM2>;
            require-prior-idle-ms = <250>;
            layers = <NAVIGA SYMBOL FUNCTN EXTRAS GAME>;
            bindings = <&to DEFAULT>;
        };

        combo_gaming {
            timeout-ms = <30>;
            key-positions = <LT1 LT2 LT3>;
            require-prior-idle-ms = <250>;
            layers = <NAVIGA>;
            bindings = <&tog GAME>;
        };

        combo_number {
            timeout-ms = <30>;
            key-positions = <RM4 LH1>;
            require-prior-idle-ms = <250>;
            layers = <DEFAULT NAVIGA>;
            bindings = <&tog NAVIGA>;
        };
        
        combo_symbol {
            timeout-ms = <30>;
            key-positions = <RM4 RH0>;
            require-prior-idle-ms = <250>;
            layers = <DEFAULT SYMBOL>;
            bindings = <&tog SYMBOL>;
        };

        combo_function {
            timeout-ms = <30>;
            key-positions = <RM4 RH1>;
            require-prior-idle-ms = <250>;
            layers = <DEFAULT FUNCTN>;
            bindings = <&tog FUNCTN>;
        };
        
    };

    keymap {
        compatible = "zmk,keymap";

            default_layer {
        bindings = <
        &kp Q       &kp W       &kp E       &kp R       &kp T                       &kp DE_Z    &kp U       &kp I       &kp O       &kp P
        &kp A       &rpi LALT S &bhm LCTL D &bhm LSFT F &kp G                       &kp H       &bhm RSFT J &bhm RCTL K &rpi LALT L &sl EXTRAS
        &kp DE_Y    &kp X       &kp C       &rpi LGUI V &kp B                       &kp N       &rpi RALT M &kp CMMA    &kp DOT     &key_repeat
                                &mo NAVIGA              &kp SPC                     &mo SYMBOL              &lt FUNCTN K_APP
        >;
        };

            symbol_layer {
        bindings = <
        &kp DE_EURO    &kp DE_UNDER   &kp DE_LBKT    &kp DE_RBKT    &kp DE_CARET                   &kp DE_EXCL    &kp DE_LT      &kp DE_GT      &kp DE_EQUAL   &kp DE_AMPS
        &kp DE_BSLH    &kp DE_FSLH    &kp DE_LBRC    &kp DE_RBRC    &kp DE_STAR                    &kp DE_QMARK   &kp DE_LPAR    &kp DE_RPAR    &kp DE_MINUS   &kp DE_MICRO
        &kp DE_HASH    &kp DE_DOLLAR  &kp DE_PIPE    &kp DE_TILDE   &kp DE_GRAVE                   &kp DE_PLUS    &kp DE_PERCENT &kp DE_DQT     &kp DE_SQT     &kp DE_SECT
                                            &caps_word              &trans                         &trans                        &trans
        >;
        };

            navigation_layer {
        bindings = <
        &trans      &trans       &trans       &trans        &trans               &trans      &trans       &trans       &trans       &trans    
        &kp PG_UP   &kp LC(LEFT) &kp UP       &kp LC(RIGHT) &kp HOME             &trans      &trans       &trans       &trans       &trans    
        &kp PG_DN   &kp LEFT     &kp DOWN     &kp RIGHT     &kp END              &trans      &trans       &trans       &trans       &trans    
                                 &trans                     &trans               &trans                   &mo BLUETOOTH          
        >;
        };

            function_layer {
        bindings = <
        &kp F11     &kp F12      &trans       &trans       &trans                &kp DE_STAR &kp DE_PLUS  &kp DE_MINUS &kp DE_SLASH &kp DE_EQUAL
        &kp N1      &rpi LALT N2 &rpi LCTL N3 &rpi LSFT N4 &kp N5                &kp N6      &rpi RSFT N7 &rpi RCTL N8 &rpi LALT N9 &kp N0
        &kp F1      &kp F2       &kp F3       &rpi LGUI F4 &kp F5                &kp F6      &rpi RALT F7 &kp F8       &kp F9       &kp F10
                                 &trans                     &trans               &trans                   &trans          
        >;
        };

            extra_layer {
        bindings = <
        &trans               &trans       &trans       &trans       &trans               &trans       &kp DE_U_UMLAUT  &trans       &kp DE_O_UMLAUT &trans
        &kp DE_A_UMLAUT      &kp DE_SZ    &trans       &trans       &trans               &trans       &trans           &trans       &trans          &trans
        &trans               &sel_from    &befundung   &trans       &trans               &trans       &kp DE_MU        &trans       &trans          &trans
                                          &trans                    &trans               &trans                    &trans          
        >;
        };

            game_layer {
        bindings = <
        &kp LALT    &kp Q        &kp W        &kp E        &kp R                 &trans      &trans       &trans       &trans       &trans       
        &kp LSFT    &kp A        &kp S        &kp D        &kp F                 &trans      &trans       &trans       &trans       &trans       
        &sk LCTL    &kp DE_Z     &kp X        &kp C        &kp V                 &trans      &trans       &trans       &trans       &trans       
                                 &mo GAME2                 &kp SPACE             &to DEFAULT              &trans          
        >;
        };

            game2_layer {
        bindings = <
        &trans      &kp N1       &kp N2       &kp N3       &kp T                 &trans      &trans       &trans       &trans       &trans
        &trans      &kp N4       &kp N5       &kp N6       &kp G                 &trans      &trans       &trans       &trans       &trans       
        &trans      &kp N7       &kp N8       &kp N9       &kp B                 &trans      &trans       &trans       &trans       &trans       
                                 &trans                    &trans                &trans                   &trans          
        >;
        };

            bluetooth_layer {
        bindings = <
        &trans      &trans       &trans       &trans       &trans                &trans       &trans       &trans       &trans       &bt BT_CLR
        &trans      &trans       &trans       &trans       &trans                &trans       &bt BT_NXT   &bt BT_PRV   &trans       &trans
        &trans      &trans       &trans       &trans       &trans                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans
                                 &trans                    &trans                &trans                   &trans          
        >;
        };
    };
};
